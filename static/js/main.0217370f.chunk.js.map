{"version":3,"sources":["components/Button.js","components/Buttons.js","components/Calculator.js","App.js","index.js"],"names":["Button","props","onClick","id","className","value","label","Buttons","Calculator","useState","currentOperand","setCurrentOperand","prevOperand","setPrevOperand","operator","setOperator","e","result","target","getAttribute","isNaN","c","length","split","slice","join","delLastChar","indexOf","isOperator","evaluate","includes","equalFunction","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0217370f.chunk.js","sourcesContent":["export const Button = (props) => {\n  return (\n    <div\n      onClick={props.onClick}\n      id={props.id}\n      className=\"Button\"\n      value={props.value}\n    >\n      {props.label}\n    </div>\n  );\n};\n","import { Button } from \"./Button\";\n\nexport const Buttons = (props) => {\n  return (\n    <div className=\"Button__container\">\n      {/* first row */}\n      <Button onClick={props.onClick} id=\"clear\" value={\"clear\"} label=\"AC\" />\n      <Button onClick={props.onClick} id=\"delete\" value={\"del\"} label=\"del\" />\n      <Button onClick={props.onClick} id=\"divide\" value={\"/\"} label=\"/\" />\n      <Button onClick={props.onClick} id=\"multiply\" value={\"*\"} label=\"X\" />\n      {/* second row */}\n      <Button onClick={props.onClick} id=\"seven\" value={\"7\"} label=\"7\" />\n      <Button onClick={props.onClick} id=\"eight\" value={\"8\"} label=\"8\" />\n      <Button onClick={props.onClick} id=\"nine\" value={\"9\"} label=\"9\" />\n      <Button onClick={props.onClick} id=\"subtract\" value={\"-\"} label=\"-\" />\n      {/* third row */}\n      <Button onClick={props.onClick} id=\"four\" value={\"4\"} label=\"4\" />\n      <Button onClick={props.onClick} id=\"five\" value={\"5\"} label=\"5\" />\n      <Button onClick={props.onClick} id=\"six\" value={\"6\"} label=\"6\" />\n      <Button onClick={props.onClick} id=\"add\" value={\"+\"} label=\"+\" />\n      {/* fourth row */}\n      <Button onClick={props.onClick} id=\"one\" value={\"1\"} label=\"1\" />\n      <Button onClick={props.onClick} id=\"two\" value={\"2\"} label=\"2\" />\n      <Button onClick={props.onClick} id=\"three\" value={\"3\"} label=\"3\" />\n      <Button onClick={props.onClick} id=\"equals\" value={\"=\"} label=\"=\" />\n      {/* fifth row */}\n      <Button onClick={props.onClick} id=\"zero\" value={\"0\"} label=\"0\" />\n      <Button onClick={props.onClick} id=\"decimal\" value={\".\"} label=\".\" />\n    </div>\n  );\n};\n","import { useState } from \"react\";\nimport { Buttons } from \"./Buttons\";\nimport { evaluate, format } from \"mathjs\";\n\nexport const Calculator = () => {\n  const [currentOperand, setCurrentOperand] = useState(\"0\");\n  const [prevOperand, setPrevOperand] = useState(\"\");\n  const [operator, setOperator] = useState(\"\");\n\n  // FUNCTIONS\n  // FUNCTIONS\n\n  const isOperator = (value) => {\n    const operators = [\"+\", \"-\", \"/\", \"*\"];\n    if (operators.indexOf(value) === -1) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const delLastChar = (value) => {\n    const newValue = value.split(\"\").slice(0, -1).join(\"\");\n    return newValue;\n  };\n\n  const allClear = () => {\n    setCurrentOperand(\"0\");\n    setOperator(\"\");\n    setPrevOperand(\"\");\n  };\n\n  const equalFunction = () => {\n    let result;\n    if (currentOperand === \"-\") return;\n    if (operator) {\n      result = evaluate(prevOperand + operator + currentOperand);\n    }\n    if (!operator) {\n      result = evaluate(currentOperand);\n    }\n    // result = format(result, { precision: 14 });\n\n    if (currentOperand === \"0\") return;\n    setPrevOperand(result);\n    setOperator(\"\");\n    setCurrentOperand(result);\n  };\n\n  // ONCLICK FUNCTION\n  // ONCLICK FUNCTION\n\n  const onClick = (e) => {\n    const value = e.target.getAttribute(\"value\");\n\n    if (!isNaN(value)) {\n      if (currentOperand === \"0\") setCurrentOperand(value);\n      else setCurrentOperand((c) => c + value);\n    }\n    if (value === \"clear\") allClear();\n    if (value === \"del\") {\n      if (currentOperand.length > 1) setCurrentOperand((c) => delLastChar(c));\n      if (currentOperand.length === 1) setCurrentOperand(\"0\");\n    }\n    if (isOperator(value)) {\n      if (!operator && !prevOperand) {\n        setPrevOperand(currentOperand);\n        setCurrentOperand(\"0\");\n        setOperator(value);\n      }\n      if (prevOperand && !operator) {\n        setOperator(value);\n        setCurrentOperand(\"\");\n      }\n\n      if (prevOperand && operator) {\n        let result;\n        if (value === \"-\") {\n          if (!currentOperand) setCurrentOperand(\"-\");\n          else if (currentOperand === \"0\") setCurrentOperand(\"-\");\n          else if (currentOperand === \"-\") setCurrentOperand(\"\");\n          else {\n            result = evaluate(prevOperand + operator + currentOperand);\n            setPrevOperand(result);\n            setCurrentOperand(\"0\");\n            setOperator(value);\n          }\n        } else {\n          if (currentOperand === \"-\") {\n            setCurrentOperand(\"0\");\n            setOperator(value);\n          } else {\n            result = evaluate(prevOperand + operator + currentOperand);\n            setPrevOperand(result);\n            setCurrentOperand(\"0\");\n            setOperator(value);\n          }\n        }\n      }\n    }\n    if (value === \".\") {\n      if (currentOperand.includes(\".\")) return;\n      setCurrentOperand((c) => c + value);\n    }\n\n    if (value === \"=\") equalFunction();\n  };\n\n  return (\n    <div className=\"Calculator__container\">\n      <div className=\"Display__container\">\n        <div className=\"Prev__operand\">{prevOperand + operator}</div>\n        <div className=\"Current__operand\" id=\"display\">\n          {currentOperand}\n        </div>\n      </div>\n      <Buttons onClick={onClick} />\n    </div>\n  );\n};\n","import \"./App.css\";\nimport { Calculator } from \"./components/Calculator\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}